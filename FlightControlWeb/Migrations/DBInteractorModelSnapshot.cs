// <auto-generated />
using System;
using FlightControlWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightControlWeb.Migrations
{
    [DbContext(typeof(DBInteractor))]
    partial class DBInteractorModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("FlightControlWeb.Models.FlightPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Passengers")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("StartLatitude")
                        .HasColumnType("REAL");

                    b.Property<double>("StartLongitude")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("FlightPlans");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyName = "combo",
                            Passengers = 4,
                            StartDate = new DateTime(2020, 5, 18, 11, 19, 46, 314, DateTimeKind.Local).AddTicks(9957),
                            StartLatitude = 32.439999999999998,
                            StartLongitude = 31.219999999999999
                        },
                        new
                        {
                            Id = 2L,
                            CompanyName = "mmba",
                            Passengers = 3,
                            StartDate = new DateTime(2020, 5, 18, 11, 19, 46, 323, DateTimeKind.Local).AddTicks(9025),
                            StartLatitude = 32.329999999999998,
                            StartLongitude = 31.440000000000001
                        });
                });

            modelBuilder.Entity("FlightControlWeb.Models.Segment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("FlightPlanId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("TimeInSeconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FlightPlanId");

                    b.ToTable("Segment");
                });

            modelBuilder.Entity("FlightControlWeb.Models.Segment", b =>
                {
                    b.HasOne("FlightControlWeb.Models.FlightPlan", null)
                        .WithMany("Segments")
                        .HasForeignKey("FlightPlanId");
                });
#pragma warning restore 612, 618
        }
    }
}
